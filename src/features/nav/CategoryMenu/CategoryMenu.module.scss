@use '@/theme/mixins' as *;

@keyframes animateIn {
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
@keyframes linksOut {
  to {
    opacity: 0;
    transform: translate3d(12rem, 0, 0);
  }
}
@keyframes introOut {
  to {
    opacity: 0;
    transform: translate3d(-9rem, 0, 0);
  }
}
@keyframes barOut {
  to {
    opacity: 0;
  }
}

.button {
  @include absolute-fill;
}
.nav {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: calc(100 * var(--vh, 1vh));
  color: #fff;
  display: grid;
  grid-template-columns: 1fr 2fr;
  z-index: 11;
  @include media('<ms') {
    grid-template-columns: 1fr;
    overflow: auto;
  }
  &:before {
    content: '';
    display: block;
    background-image: linear-gradient(
      to right,
      var(--color-goldShade3),
      var(--color-goldShade2),
      var(--color-goldShade1),
      var(--color-gold)
    );
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    z-index: 2;
    opacity: 0;
    animation-name: animateIn;
    animation-duration: 300ms;
    animation-timing-function: ease-out;
    animation-fill-mode: forwards;
    transition: opacity 300ms ease;
  }
  &[data-closing='true']:before {
    animation-name: barOut;
  }
}
.intro {
  background: linear-gradient(to top right, #333, #222);
  padding: var(--gutter-xlg) var(--gutter-sm) var(--gutter-md)
    var(--gutter-mlg);
  opacity: 0;
  transform: translate3d(-9rem, 0, 0);
  animation-name: animateIn;
  animation-duration: 300ms;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
  [data-closing='true'] & {
    opacity: 1;
    transform: translate3d(0, 0, 0);
    animation-name: introOut;
  }
  h2 {
    font-size: var(--fs-60);
    margin: 0;
    em {
      color: var(--color-gold);
      font-style: normal;
    }
  }
  @include media('<ms') {
    padding: var(--gutter-xlg) var(--margin-outer) var(--gtr-72);
  }
}
.linksOuter {
  background: linear-gradient(to top right, #444, #222);
  padding: var(--gutter-xlg) var(--gutter-mlg) var(--gutter-md)
    var(--gutter-md);
  overflow: auto;
  opacity: 0;
  transform: translate3d(12rem, 0, 0);
  animation-name: animateIn;
  animation-duration: 300ms;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
  [data-closing='true'] & {
    opacity: 1;
    transform: translate3d(0, 0, 0);
    animation-name: linksOut;
  }
  @include media('<ms') {
    grid-template-columns: 1fr;
    overflow: visible;
    padding: var(--gutter-md) var(--margin-outer);
  }
}
.linksInner {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: var(--gutter-md);
  grid-row-gap: max(calc(2 * var(--gutter-md)), 3rem);
  margin-top: 1em;
  @include media('<ms') {
    grid-template-columns: 1fr;
  }
}
.link {
  color: #fff;
  text-decoration: none;
  position: relative;
  &:after {
    content: '';
    display: block;
    width: 100%;
    height: 1px;
    background: #ffffff33;
    position: absolute;
    top: min(calc(-1 * var(--gutter-md)), -1.5rem);
    left: 0;
    pointer-events: none;
  }
  &:nth-of-type(-n + 2):after {
    display: none;
  }
  @include media('<ms') {
    &:nth-of-type(2):after {
      display: block;
    }
  }
  &:before {
    content: '';
    display: block;
    position: absolute;
    width: calc(100% + var(--gutter-sm));
    height: calc(100% + 2 * var(--gutter-md));
    top: calc(-1 * var(--gutter-md));
    left: calc(-0.5 * var(--gutter-sm));
    transition: background-color 500ms ease;
  }
  h3 {
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    color: var(--color-gold);
    font-family: var(--serif);
    font-weight: 310;
    font-size: var(--fs-36);
    margin: 0;
    transition: color 300ms ease;
    svg {
      flex: none;
      margin-top: 0.0875em;
      color: #ffffff33;
      transition: color 300ms ease;
    }
  }
  h4 {
    transition: color 200ms ease;
    margin: 0.5em 0 0.5em;
    font-weight: 300;
    font-size: var(--fs-16);
    line-height: 1.5;
    color: #ddd;
    position: relative;
    @include media('<ms') {
      font-size: var(--fs-14);
    }
  }
  @media (hover: hover) {
    &:hover {
      h3 {
        color: var(--color-goldTint2);
        svg {
          color: var(--color-goldTint2);
        }
      }
      h4 {
        color: #fff;
      }
      &:before {
        background-color: #00000011;
      }
    }
  }
}
.closeButton {
  position: absolute;
  top: var(--gutter-sm);
  right: var(--gutter-md);
  width: 2rem;
  height: auto;
  padding: 1rem;
  cursor: pointer;
  color: var(--color-goldTint1);
  transition:
    color 200ms ease,
    opacity 200ms ease;
  line,
  polyline {
    stroke-width: 3;
    stroke: currentColor;
    fill: transparent;
  }
  @media (hover: hover) {
    &:hover {
      color: var(--color-gold);
    }
  }
  opacity: 0;
  transform: translate3d(9rem, 0, 0);
  animation-name: animateIn;
  animation-duration: 300ms;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
  [data-closing='true'] & {
    opacity: 1;
    transform: translate3d(0, 0, 0);
    animation-name: linksOut;
  }
}
.allLink {
  color: var(--color-gold);
  text-transform: uppercase;
}
